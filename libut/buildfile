intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
#import xxxx_libs += libhello%lib{hello}

lib{ut}: {hxx ixx txx cxx}{**} $impl_libs $intf_libs

# Build options.
#
cxx.poptions =+ "-I$out_base" "-I$src_base"

# Export options.
#
lib{ut}:
{
  cxx.export.poptions = "-I$out_base" "-I$src_base" -DBOOST_UT_DISABLE_MODULE
  cxx.export.libs = $intf_libs
}

# See: https://github.com/boost-ext/ut/blob/bf8388f61103571dee3061a4ef23292a320d9dbf/CMakeLists.txt#L101-L113
switch $cxx.target
{
  case 'wasm32-emscripten'
  {
    cxx.export.coptions = -fwasm-exceptions -g
    cxx.export.loptions = "SHELL:-s ALLOW_MEMORY_GROWTH=1" "SHELL:-s EXIT_RUNTIME=1"
  }
}

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{ut}: bin.lib.version = "-$version.project_id"
else
  lib{ut}: bin.lib.version = "-$version.major.$version.minor"

# Install into the libut/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
boost/{hxx ixx txx}{*}:
{
  install         = include/boost/
  install.subdirs = true
}
